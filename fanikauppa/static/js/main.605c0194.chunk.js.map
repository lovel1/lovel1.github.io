{"version":3,"sources":["components/NavbarComponent.js","components/ProductData.js","components/Products.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["NavbarComponent","Navbar","collapseOnSelect","expand","bg","variant","className","Brand","Nav","Text","Button","productData","id","name","price","category","picUrl","amount","Products","cartItems","setCartItems","map","product","Col","key","Image","src","fluid","onClick","tempAddAmount","addAmount","Cart","useState","show","setShow","handleClose","filter","reduceAmount","reduce","a","b","Modal","onHide","Header","closeButton","Title","Body","Footer","App","Container","Row","xs","md","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.605c0194.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst NavbarComponent = () => {\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"shadow-lg\">\r\n    <Navbar.Brand className=\"ml-5\">Fanikauppa</Navbar.Brand>\r\n    <Nav className=\"ml-auto mr-5\">\r\n      <Navbar.Text className=\"mr-4\">\r\n      Signed in as: <b>User</b>\r\n      </Navbar.Text>\r\n      <Button variant=\"outline-info\" className=\"ml-3\">Log Out</Button>\r\n    </Nav>\r\n    </Navbar>\r\n    )\r\n    } \r\n\r\nexport default NavbarComponent;\r\n","import React from 'react';\r\n\r\n    const productData = [{\r\n        id: 1,\r\n        name: \"iPhone 11\",\r\n        price: 1099,\r\n        category: \"Phones\",\r\n        picUrl: \"https://assets.swappie.com/iphon11musta1-600x600.jpg\", \r\n        amount: 0\r\n    }\r\n    ,{\r\n        id: 2,\r\n        name: \"Samsung Galaxy S10\",\r\n        price: 1199,\r\n        category: \"Phones\",\r\n        picUrl: \"https://static.elisa.com/v2/image/2tqybbhjs47b/u9aACJYBpbctfMWE6RI9q/Galaxy+S10+Prism+Black.jpeg?w=500&fm=jpg\", \r\n        amount: 0\r\n    }\r\n    ,{\r\n        id: 3,\r\n        name: \"Samsung Galaxy Flip\",\r\n        price: 1499,\r\n        category: \"Phones\",\r\n        picUrl: \"https://static.elisa.com/v2/image/2tqybbhjs47b/3nAPoPEwL1MGvSrtBdm5kK/Galaxy+Z+Flip+5G+Mystic+Black.jpeg?w=500&fm=jpg\", \r\n        amount: 0\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Xiaomi Redmi Note 8\",\r\n        price: 199,\r\n        category: \"Phones\",\r\n        picUrl: \"https://static.elisa.com/v2/image/2tqybbhjs47b/1l7oyJIZW13DouwWBnZVPP/Redmi+Note+8+Pro+6%2F64GB+Grey.jpeg?w=500&fm=jpg\",\r\n        amount: 0\r\n    }\r\n    ,\r\n    {\r\n        id: 5,\r\n        name: \"OnePlus Nord 5G\",\r\n        price: 399,\r\n        category: \"Phones\",\r\n        picUrl: \"https://static.elisa.com/v2/image/2tqybbhjs47b/4PM4r7igRFQBnKQQ9I6h1z/Nord+12GB%2F256GB+5G+Harmaa+helmi.jpeg?w=500&fm=jpg\", \r\n        amount: 0\r\n    }\r\n    ,\r\n    {\r\n        id: 6,\r\n        name: \"Samsung Galaxy A20\",\r\n        price: 129,\r\n        category: \"Phones\",\r\n        picUrl: \"https://static.elisa.com/v2/image/2tqybbhjs47b/5HoTHfqE6AT9JulTEWYnjW/Galaxy+A20e+Valkoinen.jpeg?w=500&fm=jpg\",\r\n        amount: 0 \r\n    }\r\n    ,]\r\n\r\n    \r\n\r\n\r\nexport default productData;","import React from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nconst Products = ({cartItems, setCartItems}) => {\r\n\r\n  const addAmount = id => {\r\n    const tempAddAmount = cartItems.map(cartItems => {\r\n        if(cartItems.id === id){\r\n          cartItems = {...cartItems, amount: (cartItems.amount + 1)};\r\n        }\r\n        return cartItems;\r\n    })\r\n    setCartItems(tempAddAmount);\r\n  }\r\n\r\n    return (\r\n      <>\r\n        {cartItems.map(product =>\r\n          <Col className=\"product p-4 border m-4 shadow-lg rounded\" key={product.id}>\r\n            <h5>{product.name}</h5>\r\n            <p className=\"text-muted\">Category: {product.category}</p>\r\n            <Image className=\"pic\" src={product.picUrl} fluid></Image>\r\n            <br></br>\r\n            <br></br>\r\n            <p>Price: <b>{product.price}</b> €</p>\r\n            <hr></hr>\r\n            <Button onClick={()=>addAmount(product.id)} variant=\"info\" className=\"float-right\" >Add to Cart</Button>\r\n          </Col>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default Products;","import React, {useState} from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nconst Cart = ({cartItems, setCartItems}) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n  \r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const reduceAmount = id => {\r\n    const tempAddAmount = cartItems.map(cartItems => {\r\n        if(cartItems.id === id){\r\n          cartItems = {...cartItems, amount: (cartItems.amount - 1)};\r\n        }\r\n        return cartItems;\r\n    })\r\n    setCartItems(tempAddAmount);\r\n  }\r\n\r\n    return (\r\n      <>  \r\n      <Col className=\"cart p-4 border border-info rounded m-4 shadow-lg mt-5 align-self-start fixed sticky-top\" >\r\n        <h3>Cart</h3>\r\n        <hr></hr>\r\n        <div>\r\n        {cartItems.filter(product => product.amount > 0).map(product =>\r\n          <div className=\"cartItem\" key={product.id}>\r\n          <div className=\"textPlusBtn\">\r\n            <p className =\"cartItemElement\">{product.name} <b>{product.price}</b> € x {product.amount}</p>\r\n            <Button onClick={()=>reduceAmount(product.id)} variant=\"info\"><b>-</b></Button>\r\n          </div>\r\n            <br></br>\r\n            <hr></hr>\r\n          </div>\r\n        )}\r\n        </div>\r\n        <p><b>Total: </b> \r\n        {cartItems.filter(product => product.amount > 0).map(product => product.price * product.amount).reduce((a,b) => a + b, 0)}  \r\n         €</p>\r\n        <Button variant=\"outline-info\" onClick={handleShow} className=\"float-right text-center\">Check Out</Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Order successful!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, we have recived your order.</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"info\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Col>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default Cart;","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavbarComponent from './components/NavbarComponent.js';\r\nimport productData from './components/ProductData.js';\r\nimport Products from './components/Products.js';\r\nimport Cart from './components/Cart.js';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction App() {\r\n\r\n  const [cartItems, setCartItems] = useState(productData)\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n    <NavbarComponent/>\r\n    <Container fluid>\r\n    <Row>\r\n    <Col xs={8}>\r\n    <Row md=\"4\" className=\"mainRow mt-5 justify-content-center \">\r\n    <Products cartItems = {cartItems} setCartItems={setCartItems}/>\r\n    </Row>\r\n    </Col>\r\n    <Cart cartItems = {cartItems} setCartItems={setCartItems}/>\r\n    </Row>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}